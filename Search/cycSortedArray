#!/bin/python3

import sys
import itertools
import heapq

## Find smallest element in the cyclically sorted array
## Basically try to find the property A[mid]>a[mid+1]
# Q 11.3 
def main(argv):

        print("Running Find first occurrence of K ..")
        binSearchProperty()

def findpropertyBinSearch(A):

        #TODO Sanity check

        high = len(A)- 1# Note this
        low = 0
        print ("In property bin search..")

        while low<high:

                middle = (high-low)//2 + low
                print("Middle:{}".format(middle))
                if A[middle]>A[high]: 
                	low = middle+1 
                elif A[middle]<A[middle+1]:
                	high = middle 
        return low
        
def binSearchProperty():

        sortedlist = [378,478,550,631,103,203,220,234,279,368]
        index = findpropertyBinSearch(sortedlist)
       	print("Element property found at index {}.".format(index))        

if __name__ == "__main__":main(sys.argv[0:])
