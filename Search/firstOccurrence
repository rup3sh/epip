#!/bin/python3

import sys
import itertools
import heapq

## Find first occurrence of K
# Q 11.1
def main(argv):

        print("Running Find first occurrence of K ..")
        binSearchFindFirst()

def vanillaBinSearch(elem, arr):

        #TODO Sanity check

        high = len(arr)-1
        low = 0
        print ("In vanilla bin search..")
        index = -1 # Not found

        while low<=high:

                middle = (high-low)//2 + low
                #print("Middle:{}".format(middle))
                if arr[middle]==elem:
                	index = middle #Update index but keep looking
                	high = middle -1 # Update high becase it has to be on left now       
                elif arr[middle]>elem:
                	high = middle-1
                else:
                	low = middle+1
        return index
        
def binSearchFindFirst():

        sortedlist = [3,44,55,60,67,89,90,99,99,99,99,101,102,123,242,1245,4565]
        
        element = 9933

        index = vanillaBinSearch(element, sortedlist)
       	print("Element found at index {} first.".format(index))        

if __name__ == "__main__":main(sys.argv[0:])
